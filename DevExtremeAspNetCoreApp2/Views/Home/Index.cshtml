@using DevExtremeAspNetCoreApp2.Models


@{
    ViewData["Title"] = "Office Survey";
}

<html>
<head>
    <meta charset="UTF-8">
    <title>TRC Sustainability</title>
    @* <link rel="stylesheet" href="styles.css"> *@
</head>
    <body>
    <header class="header">
        <div class="top-bar">
            <img src="/images/logo-white.svg" alt="TRC Logo" class="logo" />
        </div>
        <div class="nav-bar">
            <div class="app-title">Sustainability Application</div>
            <nav class="nav-links">
                <a href="@Url.Action("Index", "Home")" class="active">Location Info</a>
                <a href="@Url.Action("Index", "MeterReading")">Meter Reading</a>
                <a href="#">Coordinators</a>
                <a href="#">Good Practices</a>
                <a href="#">2025 Earth Day Challenge</a>
                <a href="#">IBT</a>
                <a href="#">Paper Usage</a>
            </nav>
        </div>
    </header>
    <main class="main-container">
        
        <h3>OFFICE INFORMATION</h3>
        <div class="card-box">
        <div style="display: flex; align-items: center; gap: 20px;">
            <div>
                <label for="countrySelect" >Select State:</label>
                    <div style="width:200px;height:30px;margin-left: 28px;" id="countrySelect"></div>
            </div>

            <div>
                <label for="OfficeID" id="officeidlabel" style="display:none;">Select OfficeID:</label>
                    <div style="width:300px;height:30px;margin-left: 28px;" id="OfficeID"></div>
            </div>
        </div>
        <br />
            <div class="card-boxContainer" style="display:none" id="gridShadow">
<div style="height:100px;width:fit-content" id="gridContainer"></div>
</div>
        </div>
    </main>




<!-- jQuery first -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<!-- DevExtreme CSS -->
@* <link rel="stylesheet" href="https://cdn3.devexpress.com/jslib/22.2.15/css/dx.light.css" /> *@
<link href="~/css/devextreme/dx.light.css" rel="stylesheet" />

<!-- DevExtreme JS -->
@* <script src="https://cdn3.devexpress.com/jslib/22.2.15/js/dx.all.js"></script> *@
<script src="~/js/devextreme/dx.all.js"></script>

<style>
        /* Optional: Custom styling to match your theme */
        .dx-toolbar .dx-button.dx-button-mode-outlined {
            border-color: #5c2d91;
            color: #5c2d91;
            font-weight: 600;
            border-radius: 6px;
        }

        body {
            margin: 0;
            font-family: 'Segoe UI', sans-serif;
            padding-left:50px;
            padding-right:50px;
            background-color:black;
        }

        /* Top dark bar with logo */
        .top-bar {
            /* background-color: #26004d;  Very dark purple */ 
            background-color: #2e0055; /* Slightly lighter purple */
            height: 60px;
            display: flex;
            align-items: center;
            padding-left: 20px;
        }

        .logo {
            height: 35px;
        }

        /* Bottom nav bar with title and menu */
        .nav-bar {
            /*background-color: #2e0055;  Slightly lighter purple */
            /*background-color: #26004d;  Very dark purple */
            background-color:black;
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 5px 20px;
            border-top: 1px solid #4f2d70;
        }

        /* .card-box {
            background-color: white;
            border-radius: 8px;
            box-shadow: 0 2px 6px rgba(0, 0, 0, 0.06); 
            padding: 20px;
            border: 1px solid rgba(0, 0, 0, 0.04);
            height:800px;
        } */

        h3 {
            margin-top: -10px;
            margin-bottom: 15px;
            margin-left: 35px;
        }

        .dx-toolbar-items-container {
            background-color: white !important;
        }

        .card-box {
            background-color: white;
            border-radius: 8px;
            box-shadow: 0 2px 6px rgba(0, 0, 0, 0.06); /* soft outer shadow */
            padding: 20px;
            border: 1px solid rgba(0, 0, 0, 0.04); /* light border */
            height: 500px !important;
            margin-left: 30px;
            margin-right: 30px;
        }

        .card-boxContainer {
            /* background-color: white; */
            background-color: #fafafa;
            border-radius: 8px;
            box-shadow: 0 2px 6px rgba(0, 0, 0, 0.06); /* soft outer shadow */
            padding: 20px;
            border: 1px solid rgba(0, 0, 0, 0.04); /* light border */
            height: 250px !important;
            margin-left: 30px;
            margin-right: 30px;
        }

            .card-box label {
                /* font-weight: 600; */
                display: block;
                margin-bottom: 8px;
                color: #111;
            margin-left: 30px;
            font-size:x-small;
            }

            .card-box select {
                width: 100%;
                padding: 10px 12px;
                font-size: 14px;
                border-radius: 6px;
                border: 1px solid #ccc;
                box-shadow: 0 1px 3px rgba(0, 0, 0, 0.08); /* subtle dropdown shadow */
            }


        .app-title {
            color: white;
            font-size: 15px;
        }

        .nav-links {
            display: flex;
            gap: 20px;
            padding-right:550px;
        }

            .nav-links a {
                color: white;
                text-decoration: none;
                /* font-size: 14px; */
                font-size: x-small;
            }

                .nav-links a.active {
                    font-weight: bold;
                    text-decoration: underline;
                }

        .dx-dropdowneditor.dx-dropdowneditor-field-clickable, .dx-dropdowneditor.dx-dropdowneditor-field-clickable .dx-texteditor-input{
            background-color: white;
            border-radius: 8px;
            box-shadow: 0 2px 6px rgba(0, 0, 0, 0.06); /* soft outer shadow */            
            border: 1px solid rgba(0, 0, 0, 0.04); /* light border */
            /* height: 800px; */
        }
        label{font-size:small;}

        .dx-texteditor-input{font-size:x-small !important;}

         .dx-list-item-content {
            font-size: x-small !important;
        }

        /* Style the DevExtreme DataGrid header row */
        .dx-datagrid .dx-header-row {
            background-color: #673A91 !important; /* Deep purple */
            color: white !important; /* White text */
            font-weight: bold !important; /* Bold text */
        }

            /* Optional: Style individual header cells */
            .dx-datagrid .dx-header-row > td {
                border: 1px solid white; /* White cell borders (optional) */
            }

    * {
        box-sizing: border-box;
        font-family: Arial, sans-serif;
    }   

    .settings,
    .user {
        margin-left: 15px;
        background: #4c2671;
        padding: 5px 10px;
        border-radius: 50%;
        text-align: center;
    }

    /* .main-container {
        padding: 30px;
        background-color:white;
        height:900px;
    } */

        .main-container {
            padding: 30px;
            background-color: #d3d3d3;
            /* background-color: #e0e0e0; */
            /* background-color: #f5f5f5; */
            /* background-color: white; */
            height: 1300px;
        }

    h1 {
        font-size: 24px;
        margin-bottom: 20px;
    }

    .filters {
        display: flex;
        gap: 20px;
        margin-bottom: 20px;
    }

        .filters label {
            display: flex;
            flex-direction: column;
            font-weight: bold;
        }

    select {
        padding: 8px;
        width: 280px;
        margin-top: 5px;
    }

    .table-container {
        background: white;
        border: 1px solid #ddd;
        border-radius: 8px;
        overflow-x: auto;
        padding: 20px;
    }

    .table-actions {
        display: flex;
        justify-content: space-between;
        margin-bottom: 15px;
    }

        .table-actions input {
            padding: 8px;
            width: 200px;
        }

    .add-btn {
        padding: 8px 16px;
        background-color: #6a0dad;
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }

    table {
        width: 100%;
        border-collapse: collapse;
    }

    thead {
        background: #5d3a8a;
        color: white;
    }

    th, td {
        padding: 10px;
        border: 1px solid #ddd;
        text-align: left;
        font-size:x-small;
    }

    a {
        color: #0044cc;
        text-decoration: none;
    }

    .pagination {
        margin-top: 10px;
        text-align: right;
        font-weight: bold;
    }

</style>


<script>

        $(function () {
            let currentOfficeID = null;
        $.ajax({
            url: "/Home/GetCountries", // Your server endpoint
            method: "GET",
            success: function (data) {
                console.log("Returned countries data:", data);
                $("#countrySelect").dxSelectBox({
                    dataSource: data,
                    valueExpr: "name",           // optional: if data has id
                    displayExpr: "name",       // optional: display field
                    placeholder: "[Select]",
                    searchEnabled: true,
                    onValueChanged: function (e) {
                        const country = e.value;
    console.log('Selected country:', country);

    $.ajax({
            url: "/Home/OfficeAddress",
            method: "POST",
            data: { Country: country },
            success: function (offices) {
                 console.log("Controller response:", offices);
                  document.getElementById("OfficeID").style.display = "block";
                  officeidlabel.style.display = "block";

                  //$("#OfficeID").text(response.info);
                  $("#OfficeID").dxSelectBox({
                    dataSource: offices,
                    valueExpr: "officeID",
                    // optional: if data has id
                    displayExpr: "fullAddress",       // optional: display field
                    placeholder: "[Choose a Office]",
                    searchEnabled: true,
                     onValueChanged: function (e) {
                         debugger;
                         const officeID = e.value;
                          currentOfficeID = e.value;
                         //            if (!currentOfficeID) {
                         //                $("#gridContainer").hide();
                         //                return;
                         //            }
                         //            $("#gridContainer").show();
                         //            loadOfficeDetails(currentOfficeID);
                         //alert(officeID);
                console.log("Selected Office ID:", e.value);
                //document.getElementById("gridContainer").style.display = "block";

                 $.ajax({
            url: "/Home/GetOfficeDetails",
            method: "POST",
            data: { OfficeID: officeID },
            success: function (details) {

                  console.log("Office Details:", details);

                                            // Show and initialize grid (or handle data)
                                                document.getElementById("gridContainer").style.display = "block";
                                                document.getElementById("gridShadow").style.display = "block";

                                            // Example grid (replace fields as needed)
                                            $("#gridContainer").dxDataGrid({
                                                dataSource: details,
                                                keyExpr: "OfficeID", // or whatever your unique field is
        searchPanel: {
                visible: true,
                width: 240,
                placeholder: "Search..."
            },

            toolbar: {
                items: [
                    "searchPanel", // built-in support, clean and integrated
                    {
                        location: "after",
                        widget: "dxButton",
                        options: {
                            text: "Add New",
                            icon: "add",
                            type: "default",
                            stylingMode: "outlined",
                            onClick: function () {
                                //$("#gridContainer").dxDataGrid("instance").addRow();
                                    window.location.href = '/Home/New';
                            }
                        }
                    }
                ]
            },
                                                columns: [                                                                                       
                                                                         {
            dataField: "OfficeID",
            caption: "Office ID",
            width: 100,
            allowEditing: false,
            cellTemplate: function (container, options) {
                $("<a>")
                    .text(options.data.OfficeID)
                    .attr("href", "javascript:void(0);")
                    .on("click", function () {
                        // your edit logic or redirect here
                        editOffice(options.data.OfficeID);
                    })
                    .appendTo(container);
            }
        },

        { dataField: "OHPhase", caption: "OH Phase",width:95 },
        { dataField: "OHPhase2", caption: "OH Phase 2",width:105 },
        { dataField: "OHPhase3", caption: "OH Phase 3",width:70, visible: false },
        { dataField: "OHPhase4", caption: "OH Phase 4",width:70, visible: false },


         { dataField: "VisionCode", caption: "Vision Code",width:110 },
        { dataField: "ADPWorkCode", caption: "ADP Work Code",width:70,visible: false},
        { dataField: "VisionHeadCount", caption: "Vision HC", dataType: "number",width:70 , visible: false},
        { dataField: "AdpHeadCount", caption: "ADP HC", dataType: "number",width:70, visible: false },

         { dataField: "Comments", caption: "Comments",width:70, visible: false },
         { dataField: "RecyclePlastic", caption: "Recycle Plastic",width:70, visible: false
                , cellTemplate: function(container, options) {
                const value = options.value === "True"; // convert string to boolean
                $("<div>").dxCheckBox({
                    value: value,
                    readOnly: true // prevent editing here
                }).appendTo(container);
            }
                },
        { dataField: "RecycleGlass", caption: "Recycle Glass",width:70, visible: false
            , cellTemplate: function(container, options) {
                const value = options.value === "True"; // convert string to boolean
                $("<div>").dxCheckBox({
                    value: value,
                    readOnly: true // prevent editing here
                }).appendTo(container);
            }
            },
        { dataField: "RecycleAluminumCans", caption: "Recycle Cans",width:70, visible: false
            , cellTemplate: function(container, options) {
                const value = options.value === "True"; // convert string to boolean
                $("<div>").dxCheckBox({
                    value: value,
                    readOnly: true // prevent editing here
                }).appendTo(container);
            }
            },
        { dataField: "RecycleCardboard", caption: "Recycle Cardboard",width:70, visible: false
            , cellTemplate: function(container, options) {
                const value = options.value === "True"; // convert string to boolean
                $("<div>").dxCheckBox({
                    value: value,
                    readOnly: true // prevent editing here
                }).appendTo(container);
            }
            },
        { dataField: "RecycleBatteries", caption: "Recycle Batteries" ,width:70, visible: false
            , cellTemplate: function(container, options) {
                const value = options.value === "True"; // convert string to boolean
                $("<div>").dxCheckBox({
                    value: value,
                    readOnly: true // prevent editing here
                }).appendTo(container);
            }
            },
        { dataField: "RecycleEWaste", caption: "Recycle E-Waste",width:70, visible: false
                            , cellTemplate: function(container, options) {
                const value = options.value === "True"; // convert string to boolean
                $("<div>").dxCheckBox({
                    value: value,
                    readOnly: true // prevent editing here
                }).appendTo(container);
            }
            },
        { dataField: "RecycleCompost", caption: "Recycle Compost",width:70, visible: false
            , cellTemplate: function(container, options) {
                const value = options.value === "True"; // convert string to boolean
                $("<div>").dxCheckBox({
                    value: value,
                    readOnly: true // prevent editing here
                }).appendTo(container);
            }
            },

        { dataField: "WaterData", caption: "Water Data",width:70, visible: false
            , cellTemplate: function(container, options) {
                const value = options.value === "True"; // convert string to boolean
                $("<div>").dxCheckBox({
                    value: value,
                    readOnly: true // prevent editing here
                }).appendTo(container);
            }
            },
        { dataField: "EarthDay", caption: "Earth Day",width:70, visible: false },

        { dataField: "EnergyThermostats", caption: "Energy: Thermostats",width:70, visible: false
            , cellTemplate: function(container, options) {
                const value = options.value === "True"; // convert string to boolean
                $("<div>").dxCheckBox({
                    value: value,
                    readOnly: true // prevent editing here
                }).appendTo(container);
            }
            },
        { dataField: "EnergyStarAppliances", caption: "Energy: Star Appliances",width:70, visible: false
            , cellTemplate: function(container, options) {
                const value = options.value === "True"; // convert string to boolean
                $("<div>").dxCheckBox({
                    value: value,
                    readOnly: true // prevent editing here
                }).appendTo(container);
            }
            },
        { dataField: "EnergyBanSpaceHeaters", caption: "Energy: Ban Heaters",width:70, visible: false
            , cellTemplate: function(container, options) {
                const value = options.value === "True"; // convert string to boolean
                $("<div>").dxCheckBox({
                    value: value,
                    readOnly: true // prevent editing here
                }).appendTo(container);
            }
            },
        { dataField: "EnergyCopiersAutoOff", caption: "Energy: Auto-Off Copiers",width:70, visible: false
            , cellTemplate: function(container, options) {
                const value = options.value === "True"; // convert string to boolean
                $("<div>").dxCheckBox({
                    value: value,
                    readOnly: true // prevent editing here
                }).appendTo(container);
            }
            },
        { dataField: "EnergyLED_Lighting", caption: "Energy: LED",width:70, visible: false
            , cellTemplate: function(container, options) {
                const value = options.value === "True"; // convert string to boolean
                $("<div>").dxCheckBox({
                    value: value,
                    readOnly: true // prevent editing here
                }).appendTo(container);
            }
            },
        { dataField: "EnergyMotionLighting", caption: "Energy: Motion Lights",width:70, visible: false
            , cellTemplate: function(container, options) {
                const value = options.value === "True"; // convert string to boolean
                $("<div>").dxCheckBox({
                    value: value,
                    readOnly: true // prevent editing here
                }).appendTo(container);
            }
            },
        { dataField: "EnergyEV_Chargers", caption: "Energy: EV Chargers",width:70, visible: false
            , cellTemplate: function(container, options) {
                const value = options.value === "True"; // convert string to boolean
                $("<div>").dxCheckBox({
                    value: value,
                    readOnly: true // prevent editing here
                }).appendTo(container);
            }
            },
        { dataField: "EnergySolarOnsite", caption: "Energy: Solar Onsite",width:70, visible: false
            , cellTemplate: function(container, options) {
                const value = options.value === "True"; // convert string to boolean
                $("<div>").dxCheckBox({
                    value: value,
                    readOnly: true // prevent editing here
                }).appendTo(container);
            }
            },

        // { dataField: "LastSurveyDate", caption: "Last Survey Date",width:70 },

        { dataField: "AddressLine1", caption: "Address",width:200 },
        { dataField: "AddressLine2", caption: "Address Line 2",width:70, visible: false },
        { dataField: "AddressLine3", caption: "Address Line 3",width:70, visible: false },
        { dataField: "City", caption: "City",width:70 },
        { dataField: "StateProvince", caption: "State/Province",width:100 },
        { dataField: "PostalCode", caption: "Postal Code",width:100 },
        { dataField: "Country", caption: "Country",width:100 },

        { dataField: "STATUS", caption: "STATUS",width:70 },
        { dataField: "PrimFun", caption: "Primary Function",width:70 },
        { dataField: "HtgFuel", caption: "Heating Fuel",width:70, visible: false },

        { dataField: "YearBuilt", caption: "Year Built", dataType: "number",width:70 , visible: false},
            { dataField: "NetOfficeSF", caption: "Net Office SF", dataType: "number",width:70 , visible: false},
            { dataField: "ClimateZone", caption: "Climate Zone",width:70, visible: false },
        { dataField: "eGRIDSubregion", caption: "EGRID Subregion",width:70, visible: false },
            { dataField: "WarehouseSF", caption: "Warehouse SF", dataType: "number",width:70 , visible: false},
            { dataField: "OfficeSF", caption: "Office SF", dataType: "number",width:70, visible: false },

        // { dataField: "LeaseCommenceDate", caption: "Lease Start", dataType: "date",width:70 },
        // { dataField: "LeaseTermDate", caption: "Lease Term", dataType: "date",width:70 },
        // { dataField: "LeaseExpirationDate", caption: "Lease End", dataType: "date",width:70 },

        { dataField: "Acquisition", caption: "Acquisition Type",width:70, visible: false },
        { dataField: "Comments1", caption: "Additional Comments",width:70, visible: false },
        { dataField: "EstimateElectricUsage", caption: "Electric Usage Estimate",width:70, visible: false
            , cellTemplate: function(container, options) {
                const value = options.value === "True"; // convert string to boolean
                $("<div>").dxCheckBox({
                    value: value,
                    readOnly: true // prevent editing here
                }).appendTo(container);
            }
            },
        { dataField: "EstimateGasUsage", caption: "Gas Usage Estimate",width:70, visible: false
            , cellTemplate: function(container, options) {
                const value = options.value === "True"; // convert string to boolean
                $("<div>").dxCheckBox({
                    value: value,
                    readOnly: true // prevent editing here
                }).appendTo(container);
            }
            },
            { dataField: "EnergyDataSource", caption: "Energy Data Source",width:70 , visible: false}
                                                ],
                                                showBorders: true,
                                                searchPanel: { visible: true },
                                                paging: { pageSize: 10 },

                                                    // Enable editing
    //     editing: {
    //         mode: "popup",
    //         // or "form", "popup","row"
    //         allowAdding: true,
    //         allowUpdating: true,    // enables update
    //          popup: {
    //                 title: "Edit Office Information",
    //                 showTitle: true,
    //                 width: 1100,
    //                 height: 500,
    //                 wrapperAttr: {
    //     class: "custom-edit-popup"
    //   }
    //             },

    //                  onPopupShown: function(e) {
    //       $(".custom-edit-popup .dx-popup-content").css("background-color", "rgba(238, 237, 248, 1)");
    //     },
    //                  position: {
    //             my: "top center",
    //             at: "bottom center",
    //             of: "#gridContainer", // grid container ID or class
    //             offset: "0 10"
    //         },
    //                 form: {
    //                     colCount: 3,
    //                     items: [
    //                             "OfficeID", "STATUS", "VisionCode", "AdpWorkCode",
    // "VisionHeadCount", "AdpHeadCount", "Comments", "Comments1",
    // "OHPhase", "OHPhase2", "OHPhase3", "OHPhase4",
    // "RecyclePaper", "RecyclePlastic", "RecycleGlass", "RecycleAluminumCans",
    // "RecycleCardboard", "RecycleBatteries", "RecycleEWaste", "RecycleCompost",
    // "WaterData", "EarthDay",
    // "EnergyThermostats", "EnergyStarAppliances", "EnergyBanSpaceHeaters",
    // "EnergyCopiersAutoOff", "EnergyLED_Lighting", "EnergyMotionLighting",
    // "EnergyEV_Chargers", "EnergySolarOnsite", "EnergyDataSource",
    //  "EstimateElectricUsage", "EstimateGasUsage",
    // "AddressLine1", "AddressLine2", "AddressLine3",
    // "City", "StateProvince", "PostalCode", "Country",
    // "PrimFun", "HtgFuel", "YearBuilt", "NetOfficeSF",
    //     "ClimateZone", "eGRIDSubregion", "WarehouseSF", "OfficeSF",
    //     // "LastSurveyDate","LeaseCommenceDate", "LeaseTermDate", "LeaseExpirationDate",
    //     "Acquisition"
    //                     ]
    //                 }

    //     },
        onRowInserting: function (e) {
        e.cancel = true; // prevent default insert

        $.ajax({
            url: "/Home/InsertOfficeDetails",
            method: "POST",
            contentType: "application/json",
            data: JSON.stringify(e.data),
            success: function () {
                DevExpress.ui.notify("Record inserted successfully", "success", 2000);
               // $("#gridContainer").dxDataGrid("instance").refresh();
                const grid = $("#gridContainer").dxDataGrid("instance");
                if (grid) {
                grid.cancelEditData();  //  Close popup
                //grid.refresh();         //  Refresh data
                //$("#gridContainer").dxDataGrid("instance").refresh();
                //loadOfficeDetails(currentOfficeID);
                 } else {
                console.warn("Grid instance not found.");
                 }
            },
            error: function (xhr) {
                console.error("Insert failed:", xhr.responseText);
                DevExpress.ui.notify("Insert failed", "error", 2000);
            }
        });
        },

        // Handle update event (optional for AJAX call)
            onRowUpdating: function (e) {
        e.cancel = true; // prevent default update

        $.ajax({
            url: '/Home/UpdateOfficeDetails',
            method: 'POST',
            data: {
                key: e.key,
                values: JSON.stringify(e.newData)
            },
            success: function () {debugger;
                DevExpress.ui.notify("Updated successfully", "success", 2000);

                const grid = $("#gridContainer").dxDataGrid("instance");
                if (grid) {
                grid.cancelEditData();  //  Close popup
                //grid.refresh();         //  Refresh data
                //$("#gridContainer").dxDataGrid("instance").refresh();
                loadOfficeDetails(currentOfficeID);
                console.log("Grid refreshed");
            } else {
                console.warn("Grid instance not found.");
            }
            }
            ,
            error: function () {
                DevExpress.ui.notify("Update failed", "error", 2000);
            }
        });
    }

                                            });
                                        },

            //},
            error: function (err) {
                console.error("Error loading office details", err);
            }
        });



            }
                  });

            },
            error: function (err) {
                console.error("Error loading office list", err);
            }
        });

                    }
                });
            },
            error: function (err) {
                console.error("Error loading countries", err);
            }
        });

        function loadOfficeDetails(officeID) {
            debugger;
            $.ajax({
                url: "/Home/GetOfficeDetails",
                method: "POST",
                data: { OfficeID: officeID },
                success: function (details) {
                    const grid = $("#gridContainer").dxDataGrid("instance");

                    if (grid) {
                        // Update existing grid data source
                        grid.option("dataSource", details);
                    } else {
                        // Initialize grid for the first time
                        $("#gridContainer").dxDataGrid({
                            dataSource: details,
                            keyExpr: "OfficeID",
                            showBorders: true,
                            searchPanel: { visible: true },
                            paging: { pageSize: 10 },
                                 toolbar: {
            items: [                
                {
                    location: "after",
                    widget: "dxButton",
                    options: {
                        text: "+ New",
                        icon: "add",
                        type: "default",
                        stylingMode: "contained",
                        onClick: function () {
                            // Trigger add popup
                            $("#gridContainer").dxDataGrid("instance").addRow();
                        }
                    }
                }
            ]
        },
                            editing: {
                                mode: "popup",
                                allowUpdating: true,
                                allowAdding: true,
                                popup: {
                                    title: "Edit Office Information",
                                    showTitle: true,
                                    width: 1100,
                                    height: 500,
                                    wrapperAttr: { class: "custom-edit-popup" }
                                },
                                form: {
                                    colCount: 3,
                                    items: [
                                        "OfficeID", "STATUS", "VisionCode", "AdpWorkCode",
                                        "VisionHeadCount", "AdpHeadCount", "Comments", "Comments1",
                                        "OHPhase", "OHPhase2", "OHPhase3", "OHPhase4",
                                        "RecyclePaper", "RecyclePlastic", "RecycleGlass", "RecycleAluminumCans",
                                        "RecycleCardboard", "RecycleBatteries", "RecycleEWaste", "RecycleCompost",
                                        "WaterData", "EarthDay",
                                        "EnergyThermostats", "EnergyStarAppliances", "EnergyBanSpaceHeaters",
                                        "EnergyCopiersAutoOff", "EnergyLED_Lighting", "EnergyMotionLighting",
                                        "EnergyEV_Chargers", "EnergySolarOnsite", "EnergyDataSource",
                                        "EstimateElectricUsage", "EstimateGasUsage",
                                        "AddressLine1", "AddressLine2", "AddressLine3",
                                        "City", "StateProvince", "PostalCode", "Country",
                                        "PrimFun", "HtgFuel", "YearBuilt", "NetOfficeSF",
                                        "ClimateZone", "eGRIDSubregion", "WarehouseSF", "OfficeSF",
                                        "Acquisition"
                                    ]
                                }
                            },
                            columns: [
                                {
                                    type: "buttons",
                                    buttons: ["edit", "delete"],
                                    visibleIndex: 0
                                },
                                { dataField: "OfficeID", caption: "OfficeID", allowEditing: true,width:70 },

        { dataField: "OHPhase", caption: "OH Phase",width:70 },
        { dataField: "OHPhase2", caption: "OH Phase 2",width:70 },
        { dataField: "OHPhase3", caption: "OH Phase 3",width:70, visible: false },
        { dataField: "OHPhase4", caption: "OH Phase 4",width:70, visible: false },


         { dataField: "VisionCode", caption: "Vision Code",width:70 },
        { dataField: "ADPWorkCode", caption: "ADP Work Code",width:70 },
        { dataField: "VisionHeadCount", caption: "Vision HC", dataType: "number",width:70 , visible: false},
        { dataField: "AdpHeadCount", caption: "ADP HC", dataType: "number",width:70, visible: false },

         { dataField: "Comments", caption: "Comments",width:70, visible: false },
         { dataField: "RecyclePlastic", caption: "Recycle Plastic",width:70, visible: false
                , cellTemplate: function(container, options) {
                const value = options.value === "True"; // convert string to boolean
                $("<div>").dxCheckBox({
                    value: value,
                    readOnly: true // prevent editing here
                }).appendTo(container);
            }
                },
        { dataField: "RecycleGlass", caption: "Recycle Glass",width:70, visible: false
            , cellTemplate: function(container, options) {
                const value = options.value === "True"; // convert string to boolean
                $("<div>").dxCheckBox({
                    value: value,
                    readOnly: true // prevent editing here
                }).appendTo(container);
            }
            },
        { dataField: "RecycleAluminumCans", caption: "Recycle Cans",width:70, visible: false
            , cellTemplate: function(container, options) {
                const value = options.value === "True"; // convert string to boolean
                $("<div>").dxCheckBox({
                    value: value,
                    readOnly: true // prevent editing here
                }).appendTo(container);
            }
            },
        { dataField: "RecycleCardboard", caption: "Recycle Cardboard",width:70, visible: false
            , cellTemplate: function(container, options) {
                const value = options.value === "True"; // convert string to boolean
                $("<div>").dxCheckBox({
                    value: value,
                    readOnly: true // prevent editing here
                }).appendTo(container);
            }
            },
        { dataField: "RecycleBatteries", caption: "Recycle Batteries" ,width:70, visible: false
            , cellTemplate: function(container, options) {
                const value = options.value === "True"; // convert string to boolean
                $("<div>").dxCheckBox({
                    value: value,
                    readOnly: true // prevent editing here
                }).appendTo(container);
            }
            },
        { dataField: "RecycleEWaste", caption: "Recycle E-Waste",width:70, visible: false
                            , cellTemplate: function(container, options) {
                const value = options.value === "True"; // convert string to boolean
                $("<div>").dxCheckBox({
                    value: value,
                    readOnly: true // prevent editing here
                }).appendTo(container);
            }
            },
        { dataField: "RecycleCompost", caption: "Recycle Compost",width:70, visible: false
            , cellTemplate: function(container, options) {
                const value = options.value === "True"; // convert string to boolean
                $("<div>").dxCheckBox({
                    value: value,
                    readOnly: true // prevent editing here
                }).appendTo(container);
            }
            },

        { dataField: "WaterData", caption: "Water Data",width:70, visible: false
            , cellTemplate: function(container, options) {
                const value = options.value === "True"; // convert string to boolean
                $("<div>").dxCheckBox({
                    value: value,
                    readOnly: true // prevent editing here
                }).appendTo(container);
            }
            },
        { dataField: "EarthDay", caption: "Earth Day",width:70, visible: false },

        { dataField: "EnergyThermostats", caption: "Energy: Thermostats",width:70, visible: false
            , cellTemplate: function(container, options) {
                const value = options.value === "True"; // convert string to boolean
                $("<div>").dxCheckBox({
                    value: value,
                    readOnly: true // prevent editing here
                }).appendTo(container);
            }
            },
        { dataField: "EnergyStarAppliances", caption: "Energy: Star Appliances",width:70, visible: false
            , cellTemplate: function(container, options) {
                const value = options.value === "True"; // convert string to boolean
                $("<div>").dxCheckBox({
                    value: value,
                    readOnly: true // prevent editing here
                }).appendTo(container);
            }
            },
        { dataField: "EnergyBanSpaceHeaters", caption: "Energy: Ban Heaters",width:70, visible: false
            , cellTemplate: function(container, options) {
                const value = options.value === "True"; // convert string to boolean
                $("<div>").dxCheckBox({
                    value: value,
                    readOnly: true // prevent editing here
                }).appendTo(container);
            }
            },
        { dataField: "EnergyCopiersAutoOff", caption: "Energy: Auto-Off Copiers",width:70, visible: false
            , cellTemplate: function(container, options) {
                const value = options.value === "True"; // convert string to boolean
                $("<div>").dxCheckBox({
                    value: value,
                    readOnly: true // prevent editing here
                }).appendTo(container);
            }
            },
        { dataField: "EnergyLED_Lighting", caption: "Energy: LED",width:70, visible: false
            , cellTemplate: function(container, options) {
                const value = options.value === "True"; // convert string to boolean
                $("<div>").dxCheckBox({
                    value: value,
                    readOnly: true // prevent editing here
                }).appendTo(container);
            }
            },
        { dataField: "EnergyMotionLighting", caption: "Energy: Motion Lights",width:70, visible: false
            , cellTemplate: function(container, options) {
                const value = options.value === "True"; // convert string to boolean
                $("<div>").dxCheckBox({
                    value: value,
                    readOnly: true // prevent editing here
                }).appendTo(container);
            }
            },
        { dataField: "EnergyEV_Chargers", caption: "Energy: EV Chargers",width:70, visible: false
            , cellTemplate: function(container, options) {
                const value = options.value === "True"; // convert string to boolean
                $("<div>").dxCheckBox({
                    value: value,
                    readOnly: true // prevent editing here
                }).appendTo(container);
            }
            },
        { dataField: "EnergySolarOnsite", caption: "Energy: Solar Onsite",width:70, visible: false
            , cellTemplate: function(container, options) {
                const value = options.value === "True"; // convert string to boolean
                $("<div>").dxCheckBox({
                    value: value,
                    readOnly: true // prevent editing here
                }).appendTo(container);
            }
            },

        // { dataField: "LastSurveyDate", caption: "Last Survey Date",width:70 },

        { dataField: "AddressLine1", caption: "Address Line 1",width:70 },
        { dataField: "AddressLine2", caption: "Address Line 2",width:70, visible: false },
        { dataField: "AddressLine3", caption: "Address Line 3",width:70, visible: false },
        { dataField: "City", caption: "City",width:70 },
        { dataField: "StateProvince", caption: "State/Province",width:70 },
        { dataField: "PostalCode", caption: "Postal Code",width:70 },
        { dataField: "Country", caption: "Country",width:70 },

        { dataField: "STATUS", caption: "STATUS",width:70 },
        { dataField: "PrimFun", caption: "Primary Function",width:70 },
        { dataField: "HtgFuel", caption: "Heating Fuel",width:70, visible: false },

        { dataField: "YearBuilt", caption: "Year Built", dataType: "number",width:70 , visible: false},
        { dataField: "NetOfficeSF", caption: "Net Office SF", dataType: "number",width:70 },
        { dataField: "ClimateZone", caption: "Climate Zone",width:70 },
        { dataField: "eGRIDSubregion", caption: "EGRID Subregion",width:70, visible: false },
        { dataField: "WarehouseSF", caption: "Warehouse SF", dataType: "number",width:70 },
        { dataField: "OfficeSF", caption: "Office SF", dataType: "number",width:70 },

        // { dataField: "LeaseCommenceDate", caption: "Lease Start", dataType: "date",width:70 },
        // { dataField: "LeaseTermDate", caption: "Lease Term", dataType: "date",width:70 },
        // { dataField: "LeaseExpirationDate", caption: "Lease End", dataType: "date",width:70 },

        { dataField: "Acquisition", caption: "Acquisition Type",width:70, visible: false },
        { dataField: "Comments1", caption: "Additional Comments",width:70, visible: false },
        { dataField: "EstimateElectricUsage", caption: "Electric Usage Estimate",width:70, visible: false
            , cellTemplate: function(container, options) {
                const value = options.value === "True"; // convert string to boolean
                $("<div>").dxCheckBox({
                    value: value,
                    readOnly: true // prevent editing here
                }).appendTo(container);
            }
            },
        { dataField: "EstimateGasUsage", caption: "Gas Usage Estimate",width:70, visible: false
            , cellTemplate: function(container, options) {
                const value = options.value === "True"; // convert string to boolean
                $("<div>").dxCheckBox({
                    value: value,
                    readOnly: true // prevent editing here
                }).appendTo(container);
            }
            },
        { dataField: "EnergyDataSource", caption: "Energy Data Source",width:70 }
                            ],
                            onRowUpdating: function (e) {
                                e.cancel = true; // prevent default update

                                $.ajax({
                                    url: '/Home/UpdateOfficeDetails',
                                    method: 'POST',
                                    data: {
                                        key: e.key,
                                        values: JSON.stringify(e.newData)
                                    },
                                    success: function () {
                                        DevExpress.ui.notify("Updated successfully", "success", 2000);
                                        // Reload grid data after update
                                        loadOfficeDetails(currentOfficeID);
                                    },
                                    error: function () {
                                        DevExpress.ui.notify("Update failed", "error", 2000);
                                    }
                                });
                            },
                            onRowInserting: function (e) {
                                e.cancel = true;
                                $.ajax({
                                    url: "/Home/InsertOfficeDetails",
                                    method: "POST",
                                    contentType: "application/json",
                                    data: JSON.stringify(e.data),
                                    success: function () {
                                        DevExpress.ui.notify("Record inserted successfully", "success", 2000);
                                        loadOfficeDetails(currentOfficeID);
                                    },
                                    error: function (xhr) {
                                        console.error("Insert failed:", xhr.responseText);
                                        DevExpress.ui.notify("Insert failed", "error", 2000);
                                    }
                                });
                            }
                        });
                    }
                },
                error: function () {
                    console.error("Error loading office details");
                }
            });
        }
    },

        // Function to load and (re)bind the grid with fresh data



    );


        
        function editOffice(officeId) {
            // Redirect or call another modal/endpoint to edit
            window.location.href = '/Home/Edit?officeId=' + encodeURIComponent(officeId);
            // OR show modal with details, depending on your design
        }
    



</script>

<style>

    .section-label {
        font-weight: bold;
        font-size: 15px;
        margin: 10px 0 5px;
    }

    .dx-device-desktop {
        background-color: RGBA(238, 237, 248, 1);
    }

    .dx-device-generic {
        background-color: RGBA(238, 237, 248, 1);
    }

    .dx-toolbar-items-container {
        background-color: RGBA(238, 237, 248, 1);
    }

    .dx-layout-manager.dx-layout-manager-one-col .dx-box-item:not(:first-child) .dx-single-column-item-content > .dx-field-item {
        background-color: RGBA(238, 237, 248, 1);
    }

    .custom-edit-popup .dx-popup-content,
    .custom-edit-popup .dx-popup-normal,
    .custom-edit-popup .dx-scrollable-content {
        background-color: rgba(238, 237, 248, 1) !important;
    }

</style>
</body>
</html>

